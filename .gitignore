# Byte-compiled / optimized / DLL files
server/__pycache__/
server/*.py[cod]
server/*$py.class

# C extensions
server/*.so

# Distribution / packaging
server/.Python
server/build/
server/develop-eggs/
server/dist/
server/downloads/
server/eggs/
server/.eggs/
server/lib/
server/lib64/
server/parts/
server/sdist/
server/var/
server/wheels/
server/share/python-wheels/
server/*.egg-info/
server/.installed.cfg
server/*.egg
server/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
server/*.manifest
server/*.spec

# Installer logs
server/pip-log.txt
server/pip-delete-this-directory.txt

# Unit test / coverage reports
server/htmlcov/
server/.tox/
server/.nox/
server/.coverage
server/.coverage.*
server/.cache
server/nosetests.xml
server/coverage.xml
server/*.cover
server/*.py,cover
server/.hypothesis/
server/.pytest_cache/
server/cover/

# Translations
server/*.mo
server/*.pot

# Django stuff:
server/*.log
server/local_settings.py
server/db.sqlite3
server/db.sqlite3-journal

# Flask stuff:
server/instance/
server/.webassets-cache

# Scrapy stuff:
server/.scrapy

# Sphinx documentation
server/docs/_build/

# PyBuilder
server/.pybuilder/
server/target/

# Jupyter Notebook
server/.ipynb_checkpoints

# IPython
server/profile_default/
server/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
server/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
server/__pypackages__/

# Celery stuff
server/celerybeat-schedule
server/celerybeat.pid

# SageMath parsed files
server/*.sage.py

# Environments
server/.env
server/.venv
server/env/
server/venv/
server/ENV/
server/env.bak/
server/venv.bak/

# Spyder project settings
server/.spyderproject
server/.spyproject

# Rope project settings
server/.ropeproject

# mkdocs documentation
server/site

# mypy
server/.mypy_cache/
server/.dmypy.json
server/dmypy.json

# Pyre type checker
server/.pyre/

# pytype static type analyzer
server/.pytype/

# Cython debug symbols
server/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/


# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
client/node_modules
client/.pnp
client/.pnp.js

# testing
client/coverage

# production
client/build

# misc
client/.DS_Store
client/.env.local
client/.env.development.local
client/.env.test.local
client/.env.production.local

client/npm-debug.log*
client/yarn-debug.log*
client/yarn-error.log*